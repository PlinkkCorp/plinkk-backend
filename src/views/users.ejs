<%- include('partials/head', { title: 'Utilisateurs', description: 'Tous les profils hÃ©bergÃ©s sur Plinkk.' }) %>
<%- include('partials/header') %>

  <main class="max-w-7xl mx-auto p-4 space-y-5">
    <div class="flex flex-col md:flex-row md:items-end md:justify-between gap-3 animate-slide-up">
      <div class="space-y-1">
        <h1 class="text-2xl font-bold tracking-tight">Tous les profils hÃ©bergÃ©s</h1>
        <p class="text-xs text-slate-400">DÃ©couvrez les comptes publics Plinkk.</p>
      </div>

      <% if (users.length > 0) { %>
      <div class="w-full md:w-auto flex flex-col sm:flex-row gap-2">
        <label class="relative block flex-1">
          <input id="searchInput" type="text" placeholder="Rechercher (nom, @id, email)" class="w-full rounded-md bg-slate-900/60 border border-slate-700 px-3 py-2 pr-10 text-sm outline-none focus:ring-2 focus:ring-indigo-600 placeholder:text-slate-500" />
          <span class="absolute right-2 top-1/2 -translate-y-1/2 text-slate-500 text-xs">âŒ˜K</span>
        </label>
        <div class="flex gap-2">
          <select id="sortSelect" class="rounded-md bg-slate-900/60 border border-slate-700 px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-indigo-600">
            <option value="name-asc">Nom (Aâ†’Z)</option>
            <option value="name-desc">Nom (Zâ†’A)</option>
            <option value="id-asc">@Id (Aâ†’Z)</option>
            <option value="id-desc">@Id (Zâ†’A)</option>
          </select>
          <button id="resetBtn" class="rounded-md bg-slate-800/60 border border-slate-700 px-3 py-2 text-sm hover:bg-slate-800">RÃ©initialiser</button>
        </div>
      </div>
      <% } %>
    </div>

    <div class="flex items-center justify-between animate-slide-up">
      <p class="text-xs text-slate-400">Total: <span id="totalCount"><%= users.length %></span></p>
      <p class="text-xs text-slate-400 hidden sm:block"><span id="visibleCount"><%= users.length %></span> affichÃ©(s)</p>
    </div>

    <% if (users.length === 0) { %>
      <div class="rounded-lg border border-dashed border-slate-700 bg-slate-900/50 p-10 text-center space-y-2 animate-slide-up">
        <div class="text-2xl">ðŸ«¥</div>
        <p class="text-sm text-slate-300 font-medium">Aucun utilisateur pour le moment</p>
        <p class="text-xs text-slate-500">Les comptes publics sâ€™afficheront ici.</p>
      </div>
    <% } else { %>
      <ul id="usersGrid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
     <% users.forEach(u => { 
       const initials = (u.userName || u.id || '?').trim().charAt(0).toUpperCase(); 
       const role = u.role || 'USER';
       const cosmetics = (u.cosmetics || {});
       const selected = (cosmetics.selected || {});
       const flair = selected.flair ? String(selected.flair) : null;
       const frame = selected.frame ? String(selected.frame) : 'none';
       const bannerUrl = selected.bannerUrl ? String(selected.bannerUrl) : '';
       const theme = selected.theme ? String(selected.theme) : 'system';
     %>
  <% const isEmailPublic = Boolean(u.publicEmail); %>
  <% const publicEmail = u.publicEmail || u.email; %>
      <li class="group rounded-xl border border-slate-800/80 bg-slate-900/70 hover:bg-slate-900 transition-colors shadow-sm hover:shadow-md animate-slide-up overflow-hidden"
        data-name="<%- (u.userName||'').toLowerCase() %>"
        data-id="<%- (u.id||'').toLowerCase() %>"
  data-search="<%- (u.userName+' '+u.id + (isEmailPublic && publicEmail ? (' '+publicEmail) : '')).toLowerCase() %>">
            <% if (bannerUrl) { %>
              <div class="h-12 w-full border-b border-slate-800" style="background: center/cover no-repeat url('<%= bannerUrl %>')"></div>
            <% } %>
            <div class="p-4 flex items-start gap-3">
                <div class="relative ">
                <div class="relative shrink-0 h-11 w-11 rounded-full border border-indigo-600/50 overflow-hidden grid place-items-center bg-indigo-700/70 text-sm font-semibold text-white">
                  <%- include('partials/avatar.ejs', { user: u }) %>
                </div>
                <!-- Mettre ici une puce perso si voulu -->
              </div>
              <div class="min-w-0 flex-1">
                <div class="flex items-center gap-2 min-w-0">
                  <div class="font-semibold truncate"><%= u.userName %></div>
                  <span class="text-[11px] px-2 py-0.5 rounded-full bg-slate-800/80 border border-slate-700 text-slate-300 max-w-[7.5rem] truncate inline-block">@<%= u.id %></span>
                  <% if (role && role !== 'USER') { %>
                    <span class="text-[10px] px-2 py-0.5 rounded-full border truncate <%= role === 'ADMIN' ? 'bg-red-600/20 border-red-500/40 text-red-300' : role === 'PARTNER' ? 'bg-indigo-600/20 border-indigo-500/40 text-indigo-300' : role === 'DEVELOPER' ? 'bg-emerald-600/20 border-emerald-500/40 text-emerald-300' : 'bg-slate-700/30 border-slate-600/50 text-slate-300' %>"><%= role %></span>
                  <% } %>
                  <% if (flair) { %>
                    <span class="text-[10px] px-2 py-0.5 rounded-full bg-amber-500/20 border border-amber-400/40 text-amber-300 truncate" title="Flair"><%= flair %></span>
                  <% } %>
                </div>
                <% if (isEmailPublic) { %>
                  <span class="text-xs text-slate-400 truncate"><%= publicEmail %></span>
                <% } else { %>
                  <span class="text-xs text-slate-500 italic">Email privÃ©</span>
                <% } %>
                <div class="mt-3 flex flex-wrap items-center gap-2">
                  <a class="px-3 py-1.5 text-xs rounded-md bg-emerald-700/80 hover:bg-emerald-600 border border-emerald-500/40 text-white shadow transition-colors" href="/<%= u.id %>">Voir le profil</a>
                  <button type="button" class="px-3 py-1.5 text-xs rounded-md bg-slate-800/80 hover:bg-slate-800 border border-slate-700 text-slate-200 transition-colors copyBtn" data-id="<%= u.id %>">Copier le lien</button>
                </div>
              </div>
            </div>
          </li>
        <% }) %>
      </ul>
    <% } %>
  </main>

  <script src="/public/js/pagination.js"></script>
  <script>
    (function(){
      const $ = (s, r=document) => r.querySelector(s);
      const $$ = (s, r=document) => Array.from(r.querySelectorAll(s));
      const search = $('#searchInput');
      const sort = $('#sortSelect');
      const grid = $('#usersGrid');
      const totalCount = $('#totalCount');
      const visibleCount = $('#visibleCount');
      const resetBtn = $('#resetBtn');

      if (!grid || !window.__PlinkkPaginator) return;

      const paginator = window.__PlinkkPaginator.createPaginator(grid, { pageSize: 21, selectors: { items: 'li' }, onRender: (pageItems, meta) => {
        // mettre Ã  jour visibleCount (nombre total match)
        if (visibleCount) visibleCount.textContent = String(meta.totalItems);
      }});

      // initial total count
      if (totalCount) totalCount.textContent = String(paginator.getAll().length);

      function applyFilter(){
        const q = (search?.value || '').trim().toLowerCase();
        const all = paginator.getAll();
        const filtered = all.filter(li => {
          const hay = li.dataset.search || '';
          return !q || hay.includes(q);
        });
        paginator.setFiltered(filtered);
      }

      function applySort(){
        const val = sort?.value;
        const collator = new Intl.Collator('fr', { sensitivity: 'base' });
        const getKey = (li, key) => (li.dataset[key] || '').toString();
        paginator.sort((a,b) => {
          switch(val){
            case 'name-asc': return collator.compare(getKey(a,'name'), getKey(b,'name'));
            case 'name-desc': return collator.compare(getKey(b,'name'), getKey(a,'name'));
            case 'id-asc': return collator.compare(getKey(a,'id'), getKey(b,'id'));
            case 'id-desc': return collator.compare(getKey(b,'id'), getKey(a,'id'));
            default: return 0;
          }
        });
      }

      search?.addEventListener('input', () => applyFilter());
      sort?.addEventListener('change', () => applySort());
      resetBtn?.addEventListener('click', () => {
        if (search) search.value = '';
        if (sort) sort.value = 'name-asc';
        applySort();
        applyFilter();
      });

      // Copier le lien
      grid.addEventListener('click', (e) => {
        const btn = e.target.closest('.copyBtn');
        if (btn) {
          const url = (window.location && window.location.origin ? window.location.origin : '') + '/' + btn.dataset.id;
          navigator.clipboard?.writeText(url).catch(()=>{});
        }
      });

      // Animation des boutons copier
      const style = document.createElement('style');
      style.textContent = `
        .copy-anim { position: relative; }
        .copy-anim::after {
          content: 'CopiÃ© !';
          position: absolute; left: 50%; top: -10px; transform: translate(-50%, -100%);
          background: rgba(16,185,129,.95); color: #fff; font-size: 10px; border-radius: 6px; padding: 4px 6px;
          opacity: 0; pointer-events: none; transition: opacity .25s ease, transform .25s ease;
          box-shadow: 0 8px 24px rgba(16,185,129,.35);
        }
        .copy-anim.copied::after { opacity: 1; transform: translate(-50%, -120%); }
        .copy-anim.copied { box-shadow: 0 0 0 1px rgba(16,185,129,.35) inset; }
      `;
      document.head.appendChild(style);

      grid.addEventListener('click', (e) => {
        const btn = e.target.closest('.copyBtn');
        if (btn) {
          btn.classList.add('copy-anim');
          setTimeout(()=>btn.classList.add('copied'), 10);
          setTimeout(()=>btn.classList.remove('copied'), 1000);
        }
      });

      // Init
      applySort();
      applyFilter();

      // shortcut
      document.addEventListener('keydown', (ev) => {
        const isMac = /Mac|iPod|iPhone|iPad/.test(navigator.platform);
        const meta = isMac ? ev.metaKey : ev.ctrlKey;
        if (meta && ev.key.toLowerCase() === 'k') { ev.preventDefault(); search?.focus(); }
      });
    })();
  </script>
  </body>
  </html>
