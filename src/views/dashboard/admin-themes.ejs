<%- include('../partials/head.ejs', { title: 'Admin - Thèmes soumis', description: '', robots: 'noindex,nofollow' }) %>
<%- include('../partials/header-dash.ejs') %>

<main class="max-w-7xl mx-auto p-4 space-y-5">
  <h1 class="text-2xl font-semibold">Thèmes soumis</h1>
  <div class="flex items-center justify-between gap-3">
    <div class="flex-1">
      <input id="themeSearch" type="search" placeholder="Rechercher un thème ou auteur..." class="w-full px-3 py-2 rounded bg-slate-900/60 border border-slate-700 text-sm" />
    </div>
    <div class="ml-3">
      <a href="/dashboard/themes" class="px-3 py-1.5 rounded bg-emerald-600 text-white text-xs">Créer un thème</a>
    </div>
  </div>

  <% if ((themes||[]).length === 0) { %>
    <p class="text-sm text-slate-400 mt-3">Aucun thème en attente.</p>
  <% } else { %>
    <ul id="themesGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 mt-3">
      <% themes.forEach(t => { %>
        <li class="themeCard rounded border border-slate-800 bg-slate-900 p-3 text-sm" data-name="<%- (t.name||'').toLowerCase() %>" data-author="<%- (t.author?.userName||'').toLowerCase() %>" data-id="<%= t.id %>" data-json='<%- JSON.stringify(t.data||{}) %>'>
          <div class="flex items-start gap-3">
            <div class="w-20 h-20 rounded border border-slate-800 overflow-hidden themePreview" aria-hidden="true"></div>
            <div class="min-w-0 flex-1">
              <div class="font-medium truncate"><%= t.name %></div>
              <div class="text-xs text-slate-400 truncate">par @<%= t.author.userName %></div>
              <% if (t.description) { %>
                <div class="text-xs text-slate-400 mt-2 truncate"><%= t.description %></div>
              <% } %>
              <div class="text-[11px] text-slate-500 mt-1">Mis à jour <%= new Date(t.updatedAt).toLocaleString('fr-FR') %></div>
            </div>
          </div>
          <div class="mt-3 flex items-center justify-end gap-2">
            <button class="approveBtn px-3 py-1.5 rounded bg-emerald-600 text-white text-xs">Approuver</button>
            <button class="rejectBtn px-3 py-1.5 rounded bg-rose-600 text-white text-xs">Rejeter</button>
            <a class="px-3 py-1.5 rounded bg-indigo-600 text-white text-xs" href="/dashboard/admin/themes/<%= t.id %>">Prévisualiser</a>
          </div>
        </li>
      <% }) %>
    </ul>
  <% } %>

  <script>
  (function(){
    const grid = document.getElementById('themesGrid');
    const search = document.getElementById('themeSearch');
    function extractColors(raw){
      try{ if(!raw) return null; const d = raw;
        // si forme simplifiée { light: {bg,button,hover} }
        if (d.light && typeof d.light === 'object') return { bg: d.light.bg||'#f5f5f5', button: d.light.button||'#4f46e5', hover: d.light.hover||'#22c55e' };
        // si forme complète
        if (d.background) return { bg: d.background||'#111827', button: d.buttonBackground||'#4f46e5', hover: d.hoverColor||'#22c55e' };
        // autre
        return { bg: d.bg||'#111827', button: d.button||'#4f46e5', hover: d.hover||'#22c55e' };
      }catch(e){ return { bg:'#111827', button:'#4f46e5', hover:'#22c55e' }; }
    }
    function renderPreviews(){
      if(!grid) return;
      Array.from(grid.querySelectorAll('.themeCard')).forEach(card=>{
        const box = card.querySelector('.themePreview');
        const raw = card.getAttribute('data-json');
        let parsed = {};
        try{ parsed = JSON.parse(raw||'{}'); }catch(e){ parsed = {}; }
        const c = extractColors(parsed);
        // simple aperçu : background et deux boutons
        box.innerHTML = `<div style="padding:8px;background:${c.bg};height:100%;display:flex;flex-direction:column;justify-content:center;gap:8px;">`+
          `<div style=\"height:28px;width:60%;background:${c.button};border-radius:6px;margin:0 auto;\"></div>`+
          `<div style=\"height:28px;width:40%;background:${c.hover};border-radius:6px;margin:0 auto;\"></div>`+
          `</div>`;
      });
    }
    function wireActions(){
      if(!grid) return;
      grid.addEventListener('click', async (e)=>{
        const approve = e.target.closest('.approveBtn');
        const reject = e.target.closest('.rejectBtn');
        if (approve || reject){
          const li = (approve||reject).closest('.themeCard');
          const id = li?.dataset?.id; if(!id) return;
          const action = approve ? 'approve' : 'reject';
          (approve||reject).disabled = true; (approve||reject).textContent = 'En cours...';
          try{
            const res = await fetch('/api/themes/'+encodeURIComponent(id)+'/'+action, { method: 'POST' });
            if (!res.ok) throw new Error('HTTP '+res.status);
            li.remove();
          }catch(err){ alert('Erreur'); (approve||reject).disabled = false; (approve||reject).textContent = approve? 'Approuver':'Rejeter'; }
        }
      });
    }
    function applyFilter(){
      if(!grid) return;
      const q = (search?.value||'').trim().toLowerCase();
      Array.from(grid.querySelectorAll('.themeCard')).forEach(card=>{
        const name = card.dataset.name||'';
        const author = card.dataset.author||'';
        const ok = !q || name.includes(q) || author.includes(q);
        card.style.display = ok ? '' : 'none';
      });
    }
    search?.addEventListener('input', applyFilter);
    renderPreviews(); wireActions();
  })();
  </script>
</main>
