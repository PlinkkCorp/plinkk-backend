<% 
  // Rendu d'un avatar: image user.image (URL complÃ¨te ou nom de fichier) sinon user.profileImage, sinon initiale
  const entity = typeof user !== 'undefined' && user;
  let imgUrl = null;
  if (entity && entity.image) {
    imgUrl = String(entity.image);
    // normalisation: si ce n'est pas une URL absolue, ne commence pas par '/' et n'est pas une data:URL,
    // on reconstruit le chemin public
    if (!/^https?:\/\//i.test(imgUrl) && imgUrl[0] !== '/' && !/^data:/i.test(imgUrl)) {
      imgUrl = '/public/uploads/avatars/' + imgUrl;
    }
  }
  const initial = entity && (entity.userName || entity.id) ? String(entity.userName || entity.id).charAt(0).toUpperCase() : 'U';
%>
<% if (imgUrl) { %>
  <img data-avatar data-avatar-user="<%= entity && entity.id ? entity.id : '' %>" src="<%= imgUrl %>" alt="Avatar" class="h-full w-full object-cover rounded-full" onerror="this.onerror=null; this.style.display='none'; if(this.parentNode) { this.parentNode.textContent = '<%= initial %>'; }" />
<% } else if (entity && entity.profileImage) { %>
  <img data-avatar data-avatar-user="<%= entity && entity.id ? entity.id : '' %>" src="<%= entity.profileImage %>" alt="Avatar" class="h-full w-full object-cover rounded-full" onerror="this.onerror=null; this.style.display='none'; if(this.parentNode) { this.parentNode.textContent = '<%= initial %>'; }" />
<% } else { %>
  <%= initial %>
<% } %>
