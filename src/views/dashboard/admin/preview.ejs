<%- include('../../partials/head.ejs', { title: 'Admin - Prévisualisation thème', description: '', robots: 'noindex,nofollow' }) %>
<%- include('../../partials/header-dash.ejs') %>

<main class="max-w-5xl mx-auto p-4 space-y-5">
  <div class="flex items-start justify-between">
    <div>
      <h1 class="text-2xl font-semibold"><%= theme.name %></h1>
      <p class="text-sm text-slate-400">par @<%= theme.author.userName %></p>
    </div>
    <div class="flex gap-2">
      <button id="approveBtn" class="px-3 py-2 rounded bg-emerald-600 text-white text-sm">Approuver</button>
      <button id="rejectBtn" class="px-3 py-2 rounded bg-rose-600 text-white text-sm">Rejeter</button>
      <button id="deleteBtn" class="px-3 py-2 rounded bg-gray-700 text-white text-sm">Supprimer</button>
    </div>
  </div>

  <div class="text-sm text-slate-300"><%= theme.description || '' %></div>
  <div class="flex items-center gap-2 text-xs mt-2">
    <span class="text-slate-400">Aperçu:</span>
    <button data-mode="light" class="px-2 py-1 rounded bg-slate-800 border border-slate-700">Light</button>
    <button data-mode="dark" class="px-2 py-1 rounded bg-slate-800 border border-slate-700">Dark</button>
  </div>
  <div id="previewBox" class="rounded p-4 border border-slate-800 mt-2">
    <div class="flex gap-2">
      <button id="btnPrimary" class="px-3 py-2 text-sm rounded">Bouton</button>
      <button id="btnHover" class="px-3 py-2 text-sm rounded">Hover</button>
    </div>
    <p class="mt-3 text-sm">Texte d'exemple</p>
  </div>
</main>

<script>
(function(){
  const raw = JSON.parse(String.raw`<%- JSON.stringify(JSON.stringify(theme.data)) %>`);
  const id = '<%= theme.id %>';
  const previewBox = document.getElementById('previewBox');
  const btnPrimary = document.getElementById('btnPrimary');
  const btnHover = document.getElementById('btnHover');
  let mode = 'light';
  // Coerce to full theme shape {background, textColor, buttonBackground, buttonHoverBackground, linkHoverColor, articleHoverBoxShadow, darkTheme, opposite}
  function normalizeHex(v){ if(!v) return '#000000'; let s=String(v).trim(); if(!s.startsWith('#')) s='#'+s; if(/^#[0-9a-fA-F]{3}$/.test(s)) s='#'+s.slice(1).split('').map(c=>c+c).join(''); return s; }
  function lum(hex){ const h=normalizeHex(hex).slice(1); const r=parseInt(h.slice(0,2),16)/255,g=parseInt(h.slice(2,4),16)/255,b=parseInt(h.slice(4,6),16)/255; const a=[r,g,b].map(v=>v<=0.03928?v/12.92:Math.pow((v+0.055)/1.055,2.4)); return 0.2126*a[0]+0.7152*a[1]+0.0722*a[2]; }
  function contrast(bg){ return lum(bg)>0.5 ? '#111827' : '#ffffff'; }
  function mix(a,b,ratio=0.2){ a=normalizeHex(a).slice(1); b=normalizeHex(b).slice(1); const c=i=>Math.round(parseInt(a.slice(i,i+2),16)*(1-ratio)+parseInt(b.slice(i,i+2),16)*ratio); const r=c(0),g=c(2),bl=c(4); return '#'+[r,g,bl].map(x=>x.toString(16).padStart(2,'0')).join(''); }
  function hoverVariant(color){ return lum(color)>0.5 ? mix(color,'#000000',0.2) : mix(color,'#ffffff',0.2); }
  function coerce(data){
    if (data && data.background && (data.opposite || data.darkTheme!==undefined)) return data;
    if (data && data.light && data.dark){
      const L=data.light,D=data.dark;
      const l={
        background: normalizeHex(L.bg),
        hoverColor: normalizeHex(L.hover),
        textColor: contrast(L.bg),
        buttonBackground: normalizeHex(L.button),
        buttonHoverBackground: hoverVariant(L.button),
        buttonTextColor: contrast(L.button),
        linkHoverColor: normalizeHex(L.hover),
        articleHoverBoxShadow: `0 4px 12px ${normalizeHex(L.hover)}55`,
        darkTheme: false,
      };
      const d={
        background: normalizeHex(D.bg),
        hoverColor: normalizeHex(D.hover),
        textColor: contrast(D.bg),
        buttonBackground: normalizeHex(D.button),
        buttonHoverBackground: hoverVariant(D.button),
        buttonTextColor: contrast(D.button),
        linkHoverColor: normalizeHex(D.hover),
        articleHoverBoxShadow: `0 4px 12px ${normalizeHex(D.hover)}55`,
        darkTheme: true,
      };
      return { ...l, opposite: d };
    }
    if (data && data.bg && data.button && data.hover){
      const l={ bg:data.bg, button:data.button, hover:data.hover };
      const d={ bg:hoverVariant(data.bg), button:hoverVariant(data.button), hover:data.hover };
      return coerce({ light:l, dark:d });
    }
    return { background:'#111827', textColor:'#e5e7eb', buttonBackground:'#4f46e5', buttonHoverBackground:'#6366f1', buttonTextColor:'#111827', linkHoverColor:'#22c55e', articleHoverBoxShadow:'', darkTheme:false, opposite:{ background:'#0b1020', textColor:'#e5e7eb', buttonBackground:'#4f46e5', buttonHoverBackground:'#6366f1', buttonTextColor:'#ffffff', linkHoverColor:'#22c55e', articleHoverBoxShadow:'', darkTheme:true } };
  }
  const dataObj = (typeof raw === 'string') ? (function(){ try { return JSON.parse(raw); } catch(_) { return {}; } })() : raw;
  const d = coerce(dataObj);
  function current(){ return mode==='dark' ? (d.opposite||d) : (d.darkTheme? d.opposite : d); }
  function applyPreview(){
    const t = current();
    previewBox.style.background = t.background || '#111827';
    previewBox.style.color = t.textColor || '#e5e7eb';
    btnPrimary.style.background = t.buttonBackground || '#4f46e5'; btnPrimary.style.color = t.buttonTextColor || '#111827';
    btnHover.style.background = t.hoverColor || t.linkHoverColor || '#22c55e'; btnHover.style.color = t.textColor || '#e5e7eb';
  }
  applyPreview();
  document.querySelectorAll('[data-mode]')?.forEach(b=>{
    b.addEventListener('click', ()=>{ mode = b.getAttribute('data-mode')||'light'; applyPreview(); });
  });
  const goBack = (msg) => { if (msg) console.info(msg); window.location.href = '/dashboard/admin/themes'; };
  document.getElementById('approveBtn').addEventListener('click', async ()=>{
    const res = await fetch('/api/themes/'+encodeURIComponent(id)+'/approve', { method: 'POST' });
    if (!res.ok) { alert('Erreur'); return; }
    goBack('approved');
  });
  document.getElementById('rejectBtn').addEventListener('click', async ()=>{
    const res = await fetch('/api/themes/'+encodeURIComponent(id)+'/reject', { method: 'POST' });
    if (!res.ok) { alert('Erreur'); return; }
    goBack('rejected');
  });

  // Delete flow: show modal in page instead of alert
  const deleteBtn = document.getElementById('deleteBtn');
  function createModal(){
    const overlay = document.createElement('div');
    overlay.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black/50';
    overlay.innerHTML = `
      <div class="w-full max-w-md bg-slate-900 border border-slate-700 rounded p-4 text-sm">
        <h3 class="font-semibold mb-2">Confirmer la suppression</h3>
        <p class="text-xs text-slate-400 mb-3">Voulez-vous vraiment supprimer ce thème ? Cette action est irréversible.</p>
        <div class="flex justify-end gap-2">
          <button class="cancel px-3 py-1.5 rounded bg-slate-700">Annuler</button>
          <button class="confirm px-3 py-1.5 rounded bg-rose-600 text-white">Supprimer</button>
        </div>
      </div>`;
    document.body.appendChild(overlay);
    const cancel = overlay.querySelector('.cancel');
    const confirm = overlay.querySelector('.confirm');
    cancel.addEventListener('click', ()=> overlay.remove());
    confirm.addEventListener('click', async ()=>{
      confirm.disabled = true; confirm.textContent = 'Suppression...';
      try {
        const res = await fetch('/api/themes/'+encodeURIComponent(id), { method: 'DELETE' });
        if (!res.ok) throw new Error('HTTP '+res.status);
        overlay.remove();
        goBack('deleted');
      } catch(e){ alert('Impossible de supprimer'); confirm.disabled = false; confirm.textContent = 'Supprimer'; }
    });
  }
  deleteBtn.addEventListener('click', ()=> createModal());
})();
</script>
