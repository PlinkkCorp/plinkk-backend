<%- include('../../partials/head.ejs', { title: 'Statistiques', description: 'Aperçu des vues, clics et tendances (en développement).', robots: 'noindex,nofollow' }) %>
<%- include('../../partials/header-dash.ejs') %>

    <div class="max-w-7xl mx-auto grid grid-cols-12 gap-4 px-4 py-4">
      <%- include('../../partials/asside_dash.ejs', { active: 'stats' }) %>
      <main class="col-span-12 lg:col-span-9 space-y-4">
        <!-- En-tête (style Mon compte) -->
        <div class="mb-4">
          <div class="flex items-center justify-between">
            <h1 class="text-2xl font-semibold">Statistiques <% if (typeof plinkk !== 'undefined' && plinkk) { %><span class="text-base text-slate-400">— <%= plinkk.name %></span><% } %></h1>
            <div class="flex items-center gap-2">
              <button id="exportCsv" class="px-3 py-2 text-sm rounded-md bg-slate-800/80 hover:bg-slate-800 border border-slate-700 text-slate-200">Exporter CSV</button>
              <%- include('../../partials/changePlinkkDropdown.ejs') %>
            </div>
          </div>
        </div>

        <!-- Barre d'onglets (comme Compte) -->
        <div class="rounded-lg border border-slate-800/60 bg-slate-900/40">
          <div class="px-4 py-2 border-b border-slate-800/40">
            <nav class="flex gap-2" role="tablist" aria-label="Sections stats">
              <button class="tab-btn px-3 py-2 rounded-md text-sm font-medium bg-transparent text-slate-300" data-tab="overview" aria-selected="true">Aperçu</button>
              <button class="tab-btn px-3 py-2 rounded-md text-sm font-medium bg-transparent text-slate-300" data-tab="trends" aria-selected="false">Tendances</button>
              <button class="tab-btn px-3 py-2 rounded-md text-sm font-medium bg-transparent text-slate-300" data-tab="links" aria-selected="false">Liens</button>
              <button class="tab-btn px-3 py-2 rounded-md text-sm font-medium bg-transparent text-slate-300" data-tab="categories" aria-selected="false">Catégories</button>
            </nav>
          </div>
        </div>

        <!-- Panels -->
        <section id="panel-overview" class="tab-panel">
          <!-- KPIs -->
          <div class="grid grid-cols-2 md:grid-cols-4 gap-3">
            <div class="rounded-lg border border-slate-800 bg-slate-900/60 p-4">
              <div class="text-xs text-slate-400">Vues profil</div>
              <div id="kpiViews" class="text-2xl font-semibold">—</div>
            </div>
            <div class="rounded-lg border border-slate-800 bg-slate-900/60 p-4">
              <div class="text-xs text-slate-400">Clics totaux</div>
              <div id="kpiClicks" class="text-2xl font-semibold">—</div>
            </div>
            <div class="rounded-lg border border-slate-800 bg-slate-900/60 p-4">
              <div class="text-xs text-slate-400">Clics moyens / lien</div>
              <div id="kpiAvg" class="text-2xl font-semibold">—</div>
            </div>
            <div class="rounded-lg border border-slate-800 bg-slate-900/60 p-4">
              <div class="text-xs text-slate-400">Top lien</div>
              <div id="kpiTop" class="text-sm text-slate-200 truncate">—</div>
            </div>
          </div>
        </section>

        <!-- Tendances -->
        <section id="panel-trends" class="tab-panel hidden">
          <section class="rounded-lg border border-slate-800 bg-slate-900/60 p-4">
            <div class="mb-4 flex items-center justify-between">
              <h3 class="font-medium">Tendances (journalier)</h3>
              <div class="flex items-center gap-2 text-xs">
                <label>Période</label>
                <select id="fRange" class="h-8 px-2 rounded bg-slate-900 border border-slate-800">
                  <option value="7">7 jours</option>
                  <option value="14">14 jours</option>
                  <option value="30" selected>30 jours</option>
                  <option value="60">60 jours</option>
                  <option value="90">90 jours</option>
                </select>
              </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <div class="mb-2 flex items-center justify-between">
                  <span class="text-sm text-slate-300">Vues (journalier)</span>
                </div>
                <div id="chartViews" class="w-full"></div>
              </div>
              <div>
                <div class="mb-2 flex items-center justify-between">
                  <span class="text-sm text-slate-300">Clics (journalier)</span>
                  <span class="text-xs text-slate-400">Total clics par jour</span>
                </div>
                <div id="chartClicks" class="w-full"></div>
              </div>
            </div>
          </section>
        </section>

        <!-- Liens: filtres + Top + tableau -->
        <section id="panel-links" class="tab-panel hidden">
          <!-- Filtres / barre d'outils -->
          <section class="rounded-lg border border-slate-800 bg-slate-900/60 p-4">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-3">
              <div class="col-span-2">
                <label class="text-xs text-slate-400">Recherche</label>
                <input id="fSearch" type="text" class="mt-1 w-full px-3 py-2 rounded bg-slate-900 border border-slate-800" placeholder="Nom, URL, ID..." />
              </div>
              <div>
                <label class="text-xs text-slate-400">Min. clics</label>
                <input id="fMin" type="number" min="0" value="0" class="mt-1 w-full px-3 py-2 rounded bg-slate-900 border border-slate-800" />
              </div>
              <div>
                <label class="text-xs text-slate-400">Top N (graphique)</label>
                <input id="fTop" type="number" min="1" value="10" class="mt-1 w-full px-3 py-2 rounded bg-slate-900 border border-slate-800" />
              </div>
            </div>
          </section>

          <!-- Top liens -->
          <section class="rounded-lg border border-slate-800 bg-slate-900/60 p-4">
            <div class="mb-2 flex items-center justify-between">
              <h3 class="font-medium">Top liens par clics</h3>
              <span class="text-xs text-slate-400">Barres proportionnelles</span>
            </div>
            <div id="chartTop" class="w-full"></div>
          </section>

          <!-- Tableau détaillé -->
          <section class="rounded-lg border border-slate-800 bg-slate-900/60 p-4 overflow-auto">
            <table class="w-full text-sm">
              <thead>
                <tr class="text-left text-xs text-slate-400 border-b border-slate-800">
                  <th class="px-3 py-2">ID</th>
                  <th class="px-3 py-2">Label</th>
                  <th class="px-3 py-2">URL</th>
                  <th class="px-3 py-2 text-right">Clics</th>
                </tr>
              </thead>
              <tbody id="tblBody"></tbody>
            </table>
          </section>
        </section>

        <!-- Catégories -->
        <section id="panel-categories" class="tab-panel hidden">
          <section class="rounded-lg border border-slate-800 bg-slate-900/60 p-4">
            <div class="mb-2 flex items-center justify-between">
              <h3 class="font-medium">Clics par catégorie</h3>
              <span class="text-xs text-slate-400">Répartition des clics</span>
            </div>
            <div id="chartCategories" class="w-full"></div>
          </section>
        </section>

        <!-- Tableau détaillé -->
        <section class="rounded-lg border border-slate-800 bg-slate-900/60 p-4 overflow-auto">
          <table class="w-full text-sm">
            <thead>
              <tr class="text-left text-xs text-slate-400 border-b border-slate-800">
                <th class="px-3 py-2">ID</th>
                <th class="px-3 py-2">Label</th>
                <th class="px-3 py-2">URL</th>
                <th class="px-3 py-2 text-right">Clics</th>
              </tr>
            </thead>
            <tbody id="tblBody"></tbody>
          </table>
        </section>

  <div id="statsRoot" data-views="<%= (user.views || 0) %>" data-links='\
<%- JSON.stringify(links || []) %>' data-views-daily='\
<%- JSON.stringify(viewsDaily30d || []) %>' data-clicks-daily='[]' hidden></div>
        <script type="application/json" id="pages-data"><%- JSON.stringify(typeof pages !== 'undefined' ? pages : []) %></script>
        <script type="application/json" id="autoopen-data"><%= (typeof autoOpenPlinkkModal !== 'undefined' && autoOpenPlinkkModal) ? 'true' : 'false' %></script>
        <script type="module" src="/public/js/dashboard-stats.js"></script>
        <script>
          // Sélection intégrée de page (dropdown avec recherche) — fallback vers prompt si nécessaire
          (function(){
            const btn = document.getElementById('changePlinkkBtn');
            const dropdown = document.getElementById('changePlinkkDropdown');
            const listEl = document.getElementById('changePlinkkList');
            const search = document.getElementById('changePlinkkSearch');
            const pagesRaw = document.getElementById('pages-data')?.textContent || '[]';
            let pages = [];
            try { pages = JSON.parse(pagesRaw) || []; } catch {}

            // If the integrated elements aren't present, fallback to the prompt behavior
            if (!btn || !dropdown || !listEl || !search) {
              const fallbackBtn = document.getElementById('changePlinkk');
              if (!fallbackBtn) return;
              fallbackBtn.addEventListener('click', () => {
                // Redirect to the first available page by default (with autoRedirect flag)
                if (pages && pages.length) {
                  const id = pages[0].id;
                  if (id) location.href = `/dashboard/stats?plinkkId=${encodeURIComponent(id)}&autoRedirect=1`;
                }
              });
              return;
            }

            // Build list items
            function buildList() {
              listEl.innerHTML = '';
              pages.forEach((p, i) => {
                const li = document.createElement('li');
                li.className = 'px-2 py-1 rounded hover:bg-slate-800 cursor-pointer';
                li.tabIndex = 0;
                li.setAttribute('role','option');
                li.dataset.id = p.id;
                li.textContent = `${p.name} (${p.slug})`;
                li.addEventListener('click', () => { location.href = `/dashboard/stats?plinkkId=${encodeURIComponent(p.id)}`; });
                li.addEventListener('keydown', (e) => { if (e.key === 'Enter') location.href = `/dashboard/stats?plinkkId=${encodeURIComponent(p.id)}`; });
                listEl.appendChild(li);
              });
            }

            function filterList(q){
              const needle = (q||'').toLowerCase().trim();
              Array.from(listEl.children).forEach(li => {
                const txt = li.textContent || '';
                li.style.display = txt.toLowerCase().includes(needle) ? '' : 'none';
              });
            }

            // Toggle helper
            function toggle(open){
              dropdown.classList.toggle('hidden', !open);
              btn.setAttribute('aria-expanded', open ? 'true' : 'false');
              if (open) { setTimeout(()=> search.focus(), 50); }
            }

            buildList();

            // Don't bind toggle if button indicates a selection is needed
            if (!btn.hasAttribute('data-needs-selection')) {
              btn.addEventListener('click', (e) => { e.stopPropagation(); toggle(!dropdown.classList.contains('hidden')); search.value = ''; filterList(''); });
            } else {
              // Visual cue when user clicks a disabled button: briefly pulse the label
              btn.addEventListener('click', (e) => {
                e.preventDefault(); e.stopPropagation();
                btn.classList.add('ring-2','ring-amber-400');
                setTimeout(()=> btn.classList.remove('ring-2','ring-amber-400'), 700);
              });
            }
            search.addEventListener('input', () => filterList(search.value));

            // Close when clicking outside
            document.addEventListener('click', () => toggle(false));
            dropdown.addEventListener('click', (e)=> e.stopPropagation());

            // Auto-open support (keeps previous behavior when requested)
            const autoOpenRaw = document.getElementById('autoopen-data')?.textContent || 'false';
            const autoOpen = String(autoOpenRaw).trim() === 'true';
            if (autoOpen && pages.length > 0) {
              // auto-redirect to first page when autoOpen requested
              const id = pages[0] && pages[0].id;
              if (id) location.href = `/dashboard/stats?plinkkId=${encodeURIComponent(id)}&autoRedirect=1`;
            }
          })();
          // Tabs UX (comme la page Compte)
          (function(){
            const tabButtons = Array.from(document.querySelectorAll('.tab-btn'));
            const panels = {
              overview: document.getElementById('panel-overview'),
              trends: document.getElementById('panel-trends'),
              links: document.getElementById('panel-links'),
              categories: document.getElementById('panel-categories')
            };
            function setActive(key){
              tabButtons.forEach(btn => {
                const t = btn.getAttribute('data-tab');
                const selected = t === key;
                btn.setAttribute('aria-selected', selected ? 'true' : 'false');
                btn.classList.toggle('bg-slate-800/50', selected);
                btn.classList.toggle('text-white', selected);
                btn.classList.toggle('text-slate-300', !selected);
              });
              Object.keys(panels).forEach(k => {
                const el = panels[k]; if (!el) return;
                if (k === key) el.classList.remove('hidden'); else el.classList.add('hidden');
              });
            }
            // initial
            setActive('overview');
            tabButtons.forEach(btn => btn.addEventListener('click', () => {
              const key = btn.getAttribute('data-tab'); if (!key) return; setActive(key);
            }));
          })();
        </script>
      </main>
    </div>
    <!-- profileMenuPanel logic is now handled in partials/header-dash.ejs -->
  </body>
  </html>
